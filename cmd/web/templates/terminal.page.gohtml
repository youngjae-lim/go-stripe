{{template "base" .}}

{{define "title"}}
Virtual Terminal
{{ end }}

{{define "content"}}
<h2 class="mt-3 text-center">Virtual Terminal</h2>

<hr />

<div class="alert alert-danger text-center d-none" id="card-messages"></div>

<form
  action="/payment-succeeded"
  metho="post"
  name="charge_form"
  id="charge_form"
  class="d-block needs-validation charge-form"
  autocomplete="off"
  novalidate=""
>
  <!-- Amount field -->
  <div class="mb-3">
    <label for="amount" class="form-label">Amount</label>
    <input
      type="text"
      class="form-control"
      id="amount"
      name="amount"
      required=""
      autocomplete="amount-new"
    />
  </div>

  <!-- Cardholder Name field -->
  <div class="mb-3">
    <label for="cardholder-name" class="form-label">Cardholder Name</label>
    <input
      type="text"
      class="form-control"
      id="cardholder-name"
      name="cardholder-name"
      required=""
      autocomplete="cardholder-name-new"
    />
  </div>

  <!-- Cardholder Email field -->
  <div class="mb-3">
    <label for="cardholder-email" class="form-label">Cardholder Email</label>
    <input
      type="email"
      class="form-control"
      id="cardholder-email"
      name="cardholder-email"
      required=""
      autocomplete="cardholder-email-new"
    />
  </div>

  <!-- Stripe Credit Card field -->
  <div class="mb-3">
    <label for="card-element" class="form-label">Credit Card</label>
    <div id="card-element" class="form-control"></div>
    <div
      class="alert-danger text-center py-3 d-none"
      id="card-errors"
      role="alert"
    ></div>
    <div class="alert-success text-center" id="card-success" role="alert"></div>
  </div>

  <hr />

  <!-- Charge Card button -->
  <a
    href="javacript:void(0)"
    id="pay-button"
    class="btn btn-primary"
    onclick="val()"
    >Charge Card</a
  >

  <!-- Spinner for processing payment -->
  <div id="processing-payment" class="text-center d-none">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>

  <!-- hidden input fields -->
  <input type="hidden" name="payment_intent" id="payment_intent" />
  <input type="hidden" name="payment_method" id="payment_method" />
  <input type="hidden" name="payment_amount" id="payment_amount" />
  <input type="hidden" name="payment_currency" id="payment_currency" />
</form>

{{ end }}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>

<script>
  let card
  let stripe

  const cardMessages = document.getElementById('card-messages')
  const payButton = document.getElementById('pay-button')
  const processing = document.getElementById('processing-payment')

  stripe = Stripe(
    'pk_test_51HnT3NKRCPm2rpQHSAWwaYUM9wVfZBtbjgsONQC62JVZAB22bEpz3CigfriyscHaKZ9uhGzJaNccRKbMqoTpISJb008IPBwkWe',
  )

  function hidePayButton() {
    payButton.classList.add('d-none')
    processing.classList.remove('d-none')
  }

  // client-side form validation
  // contruct a payload to be sent to the backend
  // make a POST request to the backend
  function val() {
    let form = document.getElementById('charge_form')

    if (form.checkValidity() === false) {
      this.event.preventDefault()
      this.event.stopPropagation()
      form.classList.add('was-validated')
      return
    }
    form.classList.add('was-validated')
    hidePayButton()

    let amountToCharge = String(
      parseFloat(document.getElementById('amount').value) * 100,
    )

    let payload = {
      amount: amountToCharge,
      currency: 'usd',
    }

    const requestOptions = {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'appliction/json',
      },
      body: JSON.stringify(payload),
    }

    fetch('http://localhost:4001/api/payment-intent', requestOptions)
      .then((res) => res.text())
      .then((res) => {
        let data
        try {
          data = JSON.parse(res)
          console.log(data)
        } catch (err) {
          console.log(err)
        }
      })
  }

  ;(function () {
    // create stripe & elements
    const elements = stripe.elements()
    const style = {
      base: {
        fontSize: '16px',
        lineHeight: '24px',
      },
    }

    // create card entry
    card = elements.create('card', {
      style: style,
      hidePostalCode: false,
    })

    // mount the card element
    card.mount('#card-element')

    // check for input errors
    card.addEventListener('change', function (event) {
      var displayError = document.getElementById('card-errors')
      if (event.error) {
        displayError.classList.remove('d-none')
        displayError.textContent = event.error.message
      } else {
        displayError.classList.add('d-none')
        displayError.textContent = ''
      }
    })
  })()
</script>
{{ end }}
