{{template "base" .}}

{{define "title"}}
All Sales
{{ end }}

{{define "content"}}
<h2 class="mt-5">All Sales</h2>
<hr />

<table class="table table-striped" id="sales-table">
  <thead>
    <tr>
      <th>Transaction</th>
      <th>Customer</th>
      <th>Product</th>
      <th>Amount</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody></tbody>
</table>

<!-- paginator -->
<nav>
  <ul id="paginator" class="pagination">

  </ul>
</nav>
{{ end }}

{{define "js"}}
<script>
  let pageSize = 3
  let currentPage = 1

  function paginator(pages, curPage) {
    let p = document.getElementById("paginator")

    // previous page: <
    let html = `<li class="page-item"><a href="#!" class="page-link pager" data-page="${curPage - 1}">&lt;</a></li>`

    // page numbers
    for (var i = 0; i < pages; i++) {
      html += `<li class="page-item"><a href="#!" class="page-link pager" data-page="${i + 1}">${i + 1}</a></li>`
    }

    // next page: >
    html += `<li class="page-item"><a href="#!" class="page-link pager" data-page="${curPage + 1}">&gt;</a></li>`

    p.innerHTML = html

    let pageBtns = document.getElementsByClassName('pager')
    for (var j = 0; j < pageBtns.length; j++) {
      pageBtns[j].addEventListener('click', function(evt) {
        let desirePage = evt.target.getAttribute('data-page')
        console.log('clicked, and data-page is', desirePage)
        if ((desirePage > 0) && (desirePage <= pages)) {
          console.log('would go to page', desirePage)
          updateTable(pageSize, desirePage)
        }
      })
    }
  }

  function updateTable(ps, cp) {
    let token = localStorage.getItem('token')
    let tbody = document
      .getElementById('sales-table')
      .getElementsByTagName('tbody')[0]

    // initialize the innerHTML of the <tbody> tag before rendering the next page
    tbody.innerHTML = ""

    let body = {
      page_size: parseInt(ps, 10),
      current_page: parseInt(cp, 10),
    }

    const requestOptions = {
      method: 'post',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
        Authorization: 'Bearer ' + token,
      },
      body: JSON.stringify(body)
    }

    // fetch all sales data from the backend api
    fetch('{{ .API }}/api/admin/all-sales', requestOptions)
      .then((resp) => resp.json())
      .then(function (data) {
        if (data.orders) {
          data.orders.forEach(function (order) {
            let newRow = tbody.insertRow()
            let newCell = newRow.insertCell()

            // Transaction
            newCell.innerHTML = `<a href="/admin/sales/${order.id}">Order ${order.id}</a>`

            // Customer
            newCell = newRow.insertCell()
            let item = document.createTextNode(
              order.customer.last_name + ', ' + order.customer.first_name,
            )
            newCell.appendChild(item)

            // Product
            newCell = newRow.insertCell()
            item = document.createTextNode(order.widget.name)
            newCell.appendChild(item)

            // Amount
            let cur = formatCurrency(order.transaction.amount)
            newCell = newRow.insertCell()
            item = document.createTextNode(cur)
            newCell.appendChild(item)

            // Status
            newCell = newRow.insertCell()
            if (order.status_id != 1) {
              newCell.innerHTML = `<span class="badge bg-danger">Refunded</span>`
            } else {
              newCell.innerHTML = `<span class="badge bg-success">Charged</span>`
            }
          })
          paginator(data.last_page, data.current_page)
        } else {
          let newRow = tbody.insertRow()
          let newCell = newRow.insertCell()

          newCell.setAttribute('colspan', '5')
          newCell.innerHTML = 'No sales data available'
        }
      })
  }

  document.addEventListener('DOMContentLoaded', function () {
    updateTable(pageSize, currentPage)
  })

  function formatCurrency(amount) {
    let c = parseFloat(amount / 100)
    return c.toLocaleString('en-US', {
      style: 'currency',
      currency: 'USD',
    })
  }
</script>
{{ end }}
